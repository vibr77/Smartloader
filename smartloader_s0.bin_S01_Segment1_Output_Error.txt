------+----------------------------+-------------+----+---------+------+-----------------------+-------------------------------------------------------------------
 Line | # File                Line | Line Type   | MX |  Reloc  | Size | Address   Object Code |  Source Code                                                      
------+----------------------------+-------------+----+---------+------+-----------------------+-------------------------------------------------------------------
    1 |  1      main_T0S0.s      1 | Comment     | ?? |         |   -1 | 00/FFFF               | ;
    2 |  1      main_T0S0.s      2 | Comment     | ?? |         |   -1 | 00/FFFF               | ;__    ________  ___       Author: Vincent BESSON
    3 |  1      main_T0S0.s      3 | Comment     | ?? |         |   -1 | 00/FFFF               | ; \ \ / /_ _| _ ) _ \      Release: 0.1
    4 |  1      main_T0S0.s      4 | Comment     | ?? |         |   -1 | 00/FFFF               | ;  \ V / | || _ \   /      Date: 2025
    5 |  1      main_T0S0.s      5 | Comment     | ?? |         |   -1 | 00/FFFF               | ;   \_/ |___|___/_|_\      Description: Apple Disk II Smartloader source
    6 |  1      main_T0S0.s      6 | Comment     | ?? |         |   -1 | 00/FFFF               | ;                2025      Licence: Creative Commons
    7 |  1      main_T0S0.s      7 | Comment     | ?? |         |   -1 | 00/FFFF               | ;______________________
    8 |  1      main_T0S0.s      8 | Empty       | ?? |         |   -1 | 00/FFFF               |                                            
    9 |  1      main_T0S0.s      9 | Comment     | ?? |         |   -1 | 00/FFFF               | ; Bootloader of the Smartloader:
   10 |  1      main_T0S0.s     10 | Comment     | ?? |         |   -1 | 00/FFFF               | ; Source Files:
   11 |  1      main_T0S0.s     11 | Comment     | ?? |         |   -1 | 00/FFFF               | ;   main_T0S0.s
   12 |  1      main_T0S0.s     12 | Comment     | ?? |         |   -1 | 00/FFFF               | ;   main_T0S0_disp.s
   13 |  1      main_T0S0.s     13 | Comment     | ?? |         |   -1 | 00/FFFF               | ; the first byte (value $01) is used by the boot rom
   14 |  1      main_T0S0.s     14 | Comment     | ?? |         |   -1 | 00/FFFF               | ; the bootloader starts at $801
   15 |  1      main_T0S0.s     15 | Comment     | ?? |         |   -1 | 00/FFFF               | ; The first step is to build the display
   16 |  1      main_T0S0.s     16 | Comment     | ?? |         |   -1 | 00/FFFF               | ; Then to load the RWTS Dos sector (8-1) to $BF00 going downwards
   17 |  1      main_T0S0.s     17 | Comment     | ?? |         |   -1 | 00/FFFF               | ; Then loads to $4000 the smartloader sector from (0F to 09)
   18 |  1      main_T0S0.s     18 | Comment     | ?? |         |   -1 | 00/FFFF               | ; Becareful this bootloader can not exceed 256 bytes
   19 |  1      main_T0S0.s     19 | Empty       | ?? |         |   -1 | 00/FFFF               |                                            
   20 |  1      main_T0S0.s     20 | Comment     | ?? |         |   -1 | 00/FFFF               | ; When changing the size of smartloader in 4000, need to be changed
   21 |  1      main_T0S0.s     21 | Comment     | ?? |         |   -1 | 00/FFFF               | ; Readnext 
   22 |  1      main_T0S0.s     22 | Comment     | ?? |         |   -1 | 00/FFFF               | ;   cpx     #$0E 
   23 |  1      main_T0S0.s     23 | Comment     | ?? |         |   -1 | 00/FFFF               | ; LOAD_SML_SECT                                          
   24 |  1      main_T0S0.s     24 | Comment     | ?? |         |   -1 | 00/FFFF               | ;                lda     #$45
   25 |  1      main_T0S0.s     25 | Comment     | ?? |         |   -1 | 00/FFFF               | ;                sta     LOADADDR+1
   26 |  1      main_T0S0.s     26 | Comment     | ?? |         |   -1 | 00/FFFF               | ;                ldx     #$0D
   27 |  1      main_T0S0.s     27 | Comment     | ?? |         |   -1 | 00/FFFF               | ;                stx     CURRSECTOR
   28 |  1      main_T0S0.s     28 | Comment     | ?? |         |   -1 | 00/FFFF               | ;                jmp     PREP_CALL
   29 |  1      main_T0S0.s     29 | Comment     | ?? |         |   -1 | 00/FFFF               | ;
   30 |  1      main_T0S0.s     30 | Empty       | ?? |         |   -1 | 00/FFFF               |                                            
   31 |  1      main_T0S0.s     31 | Comment     | ?? |         |   -1 | 00/FFFF               | ; Changelog:
   32 |  1      main_T0S0.s     32 | Comment     | ?? |         |   -1 | 00/FFFF               | ;
   33 |  1      main_T0S0.s     33 | Comment     | ?? |         |   -1 | 00/FFFF               | ; 2025.08.25 v0.37:
   34 |  1      main_T0S0.s     34 | Comment     | ?? |         |   -1 | 00/FFFF               | ; [-] Remove of Prodos image type
   35 |  1      main_T0S0.s     35 | Comment     | ?? |         |   -1 | 00/FFFF               | ; [+] New Bootloader track 0 sector 0
   36 |  1      main_T0S0.s     36 | Comment     | ?? |         |   -1 | 00/FFFF               | ; [+] Fast Dos RWTS to load READ / WRITE
   37 |  1      main_T0S0.s     37 | Comment     | ?? |         |   -1 | 00/FFFF               | ; [+] Code refactoring
   38 |  1      main_T0S0.s     38 | Empty       | ?? |         |   -1 | 00/FFFF               |                                            
   39 |  1      main_T0S0.s     39 | Empty       | ?? |         |   -1 | 00/FFFF               |                                            
   40 |  1      main_T0S0.s     40 | Directive   | ?? |         |   -1 | 00/FFFF               |                     DSK    smartloader_s0.bin
   41 |  1      main_T0S0.s     41 | Directive   | ?? |         |   -1 | 00/FFFF               |                     TYP    BIN             
   42 |  1      main_T0S0.s     42 | Directive   | ?? |         |   -1 | 00/FFFF               |                     MX     %11             
   43 |  1      main_T0S0.s     43 | Empty       | ?? |         |   -1 | 00/FFFF               |                                            
   44 |  1      main_T0S0.s     44 | Directive   | ?? |         |   -1 | 00/FFFF               |                     ORG    $800            
   45 |  1      main_T0S0.s     45 | Directive   | ?? |         |   -1 | 00/FFFF               |                     xc                     
   46 |  1      main_T0S0.s     46 | Directive   | ?? |         |   -1 | 00/FFFF               |                     xc                     
   47 |  1      main_T0S0.s     47 | Empty       | ?? |         |   -1 | 00/FFFF               |                                            
   48 |  1      main_T0S0.s     48 | Equivalence | ?? |         |   -1 | 00/FFFF               | VERSION             EQU    "v0.37"         
   49 |  1      main_T0S0.s     49 | Empty       | ?? |         |   -1 | 00/FFFF               |                                            
   50 |  1      main_T0S0.s     50 | Equivalence | ?? |         |   -1 | 00/FFFF               | START               EQU    *               
   51 |  1      main_T0S0.s     51 | Equivalence | ?? |         |   -1 | 00/FFFF               | POINTA              EQU    $26             
   52 |  1      main_T0S0.s     52 | Equivalence | ?? |         |   -1 | 00/FFFF               | BSLOT               EQU    $2B             ; Boot slot
   53 |  1      main_T0S0.s     53 | Equivalence | ?? |         |   -1 | 00/FFFF               | BSECTR              EQU    $3D             ; LAST BSECTR READ
   54 |  1      main_T0S0.s     54 | Equivalence | ?? |         |   -1 | 00/FFFF               | BTEMP               EQU    $3E             ; ADDRESS BTEMP
   55 |  1      main_T0S0.s     55 | Equivalence | ?? |         |   -1 | 00/FFFF               | BRETRY              EQU    $5C             ; OFFSET TO READER
   56 |  1      main_T0S0.s     56 | Equivalence | ?? |         |   -1 | 00/FFFF               | START_SECTOR        EQU    $08             ; First sector to read moving downward
   57 |  1      main_T0S0.s     57 | Equivalence | ?? |         |   -1 | 00/FFFF               | END_SECTOR          EQU    $00             ; Last sector to read
   58 |  1      main_T0S0.s     58 | Equivalence | ?? |         |   -1 | 00/FFFF               | PRGJMP              EQU    $4000           ; After the sector copy to memory, jmp to program entry point
   59 |  1      main_T0S0.s     59 | Equivalence | ?? |         |   -1 | 00/FFFF               | RWTS_LOC_HI         EQU    $BF             ; High adress of RWTS target location ($BF00)
   60 |  1      main_T0S0.s     60 | Empty       | ?? |         |   -1 | 00/FFFF               |                                            
   61 |  1      main_T0S0.s     61 | Data        | ?? |         |   -1 | 00/FFFF :             |                     dfb    01              ; <!> Needed by thre boot rom
   62 |  1      main_T0S0.s     62 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     lda    CURRSECTOR      ; Sector to be loaded
   63 |  1      main_T0S0.s     63 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     cmp    #$08            ; 08 means we are at the begining and we starts by init the display
   64 |  1      main_T0S0.s     64 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     bne    C1              
   65 |  1      main_T0S0.s     65 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     jsr    INIT_DISP       ; Display the screen mask and then load the sectors
   66 |  1      main_T0S0.s     66 | Empty       | ?? |         |   -1 | 00/FFFF               | C1                                         
   67 |  1      main_T0S0.s     67 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     lda    POINTA+1        ; WHERE DID BSECTR GET LOADED?
   68 |  1      main_T0S0.s     68 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     cmp    #09             ; (AT 0800)?
   69 |  1      main_T0S0.s     69 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     bne    READNEXT        ; =>NO. WE'RE LOADING SOMETHING
   70 |  1      main_T0S0.s     70 | Comment     | ?? |         |   -1 | 00/FFFF               | ;
   71 |  1      main_T0S0.s     71 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     lda    BSLOT           ; GET BOOT BSLOT
   72 |  1      main_T0S0.s     72 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     lsr    A               ; CONVERT TO CX00
   73 |  1      main_T0S0.s     73 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     lsr    A               
   74 |  1      main_T0S0.s     74 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     lsr    A               
   75 |  1      main_T0S0.s     75 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     lsr    A               
   76 |  1      main_T0S0.s     76 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     ora    #$C0            
   77 |  1      main_T0S0.s     77 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     sta    BTEMP+1         
   78 |  1      main_T0S0.s     78 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     lda    #BRETRY         ; PROM ROUTINE OFFSET
   79 |  1      main_T0S0.s     79 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     sta    BTEMP           
   80 |  1      main_T0S0.s     80 | Empty       | ?? |         |   -1 | 00/FFFF               |                                            
   81 |  1      main_T0S0.s     81 | Empty       | ?? |         |   -1 | 00/FFFF               | READNEXT                                   ;
   82 |  1      main_T0S0.s     82 | Empty       | ?? |         |   -1 | 00/FFFF               |                                            
   83 |  1      main_T0S0.s     83 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     ldx    READ_SECTOR     
   84 |  1      main_T0S0.s     84 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     cpx    #$10            ; check if sector from 0E -> 09 is done
   85 |  1      main_T0S0.s     85 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     beq    START_PRG       ; then jump smartloader
   86 |  1      main_T0S0.s     86 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     INC    READ_SECTOR     
   87 |  1      main_T0S0.s     87 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     ldx    CURRSECTOR      
   88 |  1      main_T0S0.s     88 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     cpx    #END_SECTOR     ; finish DOS RWTS ?
   89 |  1      main_T0S0.s     89 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     beq    LOAD_SML_SECT   ; if yes then load smartloader sectors
   90 |  1      main_T0S0.s     90 | Empty       | ?? |         |   -1 | 00/FFFF               |                                            
   91 |  1      main_T0S0.s     91 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     dec    CURRSECTOR      ; ONE LESS BELL TO ANSWER..
   92 |  1      main_T0S0.s     92 | Empty       | ?? |         |   -1 | 00/FFFF               |                                            
   93 |  1      main_T0S0.s     93 | Empty       | ?? |         |   -1 | 00/FFFF               | PREP_CALL                                  ; Preparation call for ROM Call to load sectors
   94 |  1      main_T0S0.s     94 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     lda    TABLE,X         ; GET PHYSICAL BSECTR NUMBER
   95 |  1      main_T0S0.s     95 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     sta    BSECTR          ; AND SET FOR BOOT PROM READ
   96 |  1      main_T0S0.s     96 | Empty       | ?? |         |   -1 | 00/FFFF               |                                            
   97 |  1      main_T0S0.s     97 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     lda    LOADADDR+1      ; GET LOAD ADDRESS
   98 |  1      main_T0S0.s     98 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     sta    POINTA+1        ; FOR BSECTR READ
   99 |  1      main_T0S0.s     99 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     dec    LOADADDR+1      ; MOVE LOAD ADDRESS DOWN A PAGE
  100 |  1      main_T0S0.s    100 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     ldx    BSLOT           ; RESTORE BSLOT NUMBER
  101 |  1      main_T0S0.s    101 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     lda    CURRSECTOR      
  102 |  1      main_T0S0.s    102 | Empty       | ?? |         |   -1 | 00/FFFF               |                                            
  103 |  1      main_T0S0.s    103 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     jmp    (BTEMP)         ; Call ROM to load more sectors
  104 |  1      main_T0S0.s    104 | Empty       | ?? |         |   -1 | 00/FFFF               | LOAD_SML_SECT                              
  105 |  1      main_T0S0.s    105 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     lda    #$47            
  106 |  1      main_T0S0.s    106 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     sta    LOADADDR+1      
  107 |  1      main_T0S0.s    107 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     ldx    #$0F            
  108 |  1      main_T0S0.s    108 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     stx    CURRSECTOR      
  109 |  1      main_T0S0.s    109 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     jmp    PREP_CALL       
  110 |  1      main_T0S0.s    110 | Empty       | ?? |         |   -1 | 00/FFFF               |                                            
  111 |  1      main_T0S0.s    111 | Empty       | ?? |         |   -1 | 00/FFFF               | START_PRG                                  
  112 |  1      main_T0S0.s    112 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     jmp    PRGJMP          ; OFF TO LOOADER!
  113 |  1      main_T0S0.s    113 | Empty       | ?? |         |   -1 | 00/FFFF               |                                            
  114 |  1      main_T0S0.s    114 | Empty       | ?? |         |   -1 | 00/FFFF               | INIT_DISP                                  
  115 |  1      main_T0S0.s    115 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     jsr    CLRSCR          
  116 |  1      main_T0S0.s    116 | Empty       | ?? |         |   -1 | 00/FFFF               |                                            
  117 |  1      main_T0S0.s    117 | Unknown    | ?? |         |   -1 | 00/FFFF               |                     //LDA  #$11            ; Switch off 80 Col mode  TO BE TESTED
  118 |  1      main_T0S0.s    118 | Unknown    | ?? |         |   -1 | 00/FFFF               |                     //JSR  $FDED           
  119 |  1      main_T0S0.s    119 | Empty       | ?? |         |   -1 | 00/FFFF               |                                            
  120 |  1      main_T0S0.s    120 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     ldx    #$0E            
  121 |  1      main_T0S0.s    121 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     ldy    #$00            
  122 |  1      main_T0S0.s    122 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     jsr    dispPositionCursor
  123 |  1      main_T0S0.s    123 | Empty       | ?? |         |   -1 | 00/FFFF               |                                            
  124 |  1      main_T0S0.s    124 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     ldx    #$FF            ; Normal charset
  125 |  1      main_T0S0.s    125 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     stx    zpDispMask      ; store to zeropage
  126 |  1      main_T0S0.s    126 | Empty       | ?? |         |   -1 | 00/FFFF               |                                            
  127 |  1      main_T0S0.s    127 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     ldx    #<_title        
  128 |  1      main_T0S0.s    128 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     ldy    #>_title        
  129 |  1      main_T0S0.s    129 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     jsr    printMsg        
  130 |  1      main_T0S0.s    130 | Empty       | ?? |         |   -1 | 00/FFFF               |                                            
  131 |  1      main_T0S0.s    131 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     ldx    #$22            
  132 |  1      main_T0S0.s    132 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     ldy    #$17            
  133 |  1      main_T0S0.s    133 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     jsr    dispPositionCursor
  134 |  1      main_T0S0.s    134 | Empty       | ?? |         |   -1 | 00/FFFF               |                                            
  135 |  1      main_T0S0.s    135 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     ldx    #<_version      
  136 |  1      main_T0S0.s    136 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     ldy    #>_version      
  137 |  1      main_T0S0.s    137 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     jsr    printMsg        
  138 |  1      main_T0S0.s    138 | Empty       | ?? |         |   -1 | 00/FFFF               |                                            
  139 |  1      main_T0S0.s    139 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     ldx    #$00            
  140 |  1      main_T0S0.s    140 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     ldy    #$01            
  141 |  1      main_T0S0.s    141 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     jsr    dispPositionCursor
  142 |  1      main_T0S0.s    142 | Empty       | ?? |         |   -1 | 00/FFFF               |                                            
  143 |  1      main_T0S0.s    143 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     ldy    #$28            
  144 |  1      main_T0S0.s    144 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     jsr    dispLine        
  145 |  1      main_T0S0.s    145 | Empty       | ?? |         |   -1 | 00/FFFF               |                                            
  146 |  1      main_T0S0.s    146 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     ldy    #$14            
  147 |  1      main_T0S0.s    147 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     jsr    dispPositionCursor
  148 |  1      main_T0S0.s    148 | Empty       | ?? |         |   -1 | 00/FFFF               |                                            
  149 |  1      main_T0S0.s    149 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     ldy    #$28            
  150 |  1      main_T0S0.s    150 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     jsr    dispLine        
  151 |  1      main_T0S0.s    151 | Empty       | ?? |         |   -1 | 00/FFFF               |                                            
  152 |  1      main_T0S0.s    152 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     rts                    
  153 |  1      main_T0S0.s    153 | Empty       | ?? |         |   -1 | 00/FFFF               | _title                                     
  154 |  1      main_T0S0.s    154 | Data        | ?? |         |   -1 | 00/FFFF :             |                     asc    "SMARTLOADER"   
  155 |  1      main_T0S0.s    155 | Data        | ?? |         |   -1 | 00/FFFF :             |                     dfb    $00             
  156 |  1      main_T0S0.s    156 | Empty       | ?? |         |   -1 | 00/FFFF               | _version                                   
  157 |  1      main_T0S0.s    157 | Data        | ?? |         |   -1 | 00/FFFF :             |                     asc    VERSION         
  158 |  1      main_T0S0.s    158 | Data        | ?? |         |   -1 | 00/FFFF :             |                     dfb    $00             
  159 |  1      main_T0S0.s    159 | Empty       | ?? |         |   -1 | 00/FFFF               |                                            
  160 |  1      main_T0S0.s    160 | Comment     | ?? |         |   -1 | 00/FFFF               | ;*  TABLE OF PHYSICAL BSECTR NUMBERS
  161 |  1      main_T0S0.s    161 | Comment     | ?? |         |   -1 | 00/FFFF               | ;*  WHICH CORRESPOND TO THE LOGICAL
  162 |  1      main_T0S0.s    162 | Comment     | ?? |         |   -1 | 00/FFFF               | ;*  BSECTRS 0-F ON TRACK ZERO...
  163 |  1      main_T0S0.s    163 | Empty       | ?? |         |   -1 | 00/FFFF               |                                            
  164 |  1      main_T0S0.s    164 | Empty       | ?? |         |   -1 | 00/FFFF               | TABLE                                      
  165 |  1      main_T0S0.s    165 | Data        | ?? |         |   -1 | 00/FFFF :             |                     dfb    00,13,11        ; 00->00,01->13,02->11
  166 |  1      main_T0S0.s    166 | Data        | ?? |         |   -1 | 00/FFFF :             |                     dfb    09,07,05        ; 03->09,04->07;05->05
  167 |  1      main_T0S0.s    167 | Data        | ?? |         |   -1 | 00/FFFF :             |                     dfb    03,01,14        ; 06->03,07->01,08->14
  168 |  1      main_T0S0.s    168 | Data        | ?? |         |   -1 | 00/FFFF :             |                     dfb    12,10,08        ; 09->12,10->10,11->08
  169 |  1      main_T0S0.s    169 | Data        | ?? |         |   -1 | 00/FFFF :             |                     dfb    06,04,02,15     ; 12->6,13->04,14->02,15->15
  170 |  1      main_T0S0.s    170 | Data        | ?? |         |   -1 | 00/FFFF :             | CURRSECTOR          dfb    START_SECTOR    ; 10 sectors to be loaded
  171 |  1      main_T0S0.s    171 | Data        | ?? |         |   -1 | 00/FFFF :             | READ_SECTOR         dfb    0               ; Total sector Read
  172 |  1      main_T0S0.s    172 | Data        | ?? |         |   -1 | 00/FFFF :             | LOADADDR            dfb    $00,RWTS_LOC_HI 
  173 |  1      main_T0S0.s    173 | Empty       | ?? |         |   -1 | 00/FFFF               |                                            
  174 |  1      main_T0S0.s    174 | Directive   | ?? |         |   -1 | 00/FFFF               |                     put    main_T0S0_disp.s; Load additionnal disp routine
  175 |  2 main_T0S0_disp.s      1 | Equivalence | ?? |         |   -1 | 00/FFFF               | BELL                EQU    $FF3A           
  176 |  2 main_T0S0_disp.s      2 | Equivalence | ?? |         |   -1 | 00/FFFF               | PREAD               EQU    $FB1E           
  177 |  2 main_T0S0_disp.s      3 | Equivalence | ?? |         |   -1 | 00/FFFF               | CLRSCR              EQU    $FC58           
  178 |  2 main_T0S0_disp.s      4 | Empty       | ?? |         |   -1 | 00/FFFF               |                                            
  179 |  2 main_T0S0_disp.s      5 | Equivalence | ?? |         |   -1 | 00/FFFF               | COUT                EQU    $FDED           ; Apple II character out func.
  180 |  2 main_T0S0_disp.s      6 | Equivalence | ?? |         |   -1 | 00/FFFF               | COUTD               EQU    $FDE2           
  181 |  2 main_T0S0_disp.s      7 | Equivalence | ?? |         |   -1 | 00/FFFF               | COUT1               EQU    $FDF0           
  182 |  2 main_T0S0_disp.s      8 | Empty       | ?? |         |   -1 | 00/FFFF               |                                            
  183 |  2 main_T0S0_disp.s      9 | Equivalence | ?? |         |   -1 | 00/FFFF               | CURPOS              EQU    $FB5B           
  184 |  2 main_T0S0_disp.s     10 | Equivalence | ?? |         |   -1 | 00/FFFF               | BASCLC              EQU    $FBC1           ; subroutine to position cursor
  185 |  2 main_T0S0_disp.s     11 | Empty       | ?? |         |   -1 | 00/FFFF               |                                            
  186 |  2 main_T0S0_disp.s     12 | Equivalence | ?? |         |   -1 | 00/FFFF               | BASL                EQU    $28             
  187 |  2 main_T0S0_disp.s     13 | Equivalence | ?? |         |   -1 | 00/FFFF               | BASH                EQU    $29             
  188 |  2 main_T0S0_disp.s     14 | Equivalence | ?? |         |   -1 | 00/FFFF               | CV                  EQU    $25             ; Cursor position
  189 |  2 main_T0S0_disp.s     15 | Equivalence | ?? |         |   -1 | 00/FFFF               | CH                  EQU    $24             
  190 |  2 main_T0S0_disp.s     16 | Empty       | ?? |         |   -1 | 00/FFFF               |                                            
  191 |  2 main_T0S0_disp.s     17 | Equivalence | ?? |         |   -1 | 00/FFFF               | zpDispMask          EQU    $32             ; INVERTED 0x7F NORMAL 0xFF
  192 |  2 main_T0S0_disp.s     18 | Empty       | ?? |         |   -1 | 00/FFFF               |                                            
  193 |  2 main_T0S0_disp.s     19 | Equivalence | ?? |         |   -1 | 00/FFFF               | zpPtr1              EQU    $80             ; 80/81 2 Bytes Addr ptr for DisplayMsg on Screen
  194 |  2 main_T0S0_disp.s     20 | Equivalence | ?? |         |   -1 | 00/FFFF               | zpPtr2              EQU    $83             
  195 |  2 main_T0S0_disp.s     21 | Empty       | ?? |         |   -1 | 00/FFFF               |                                            
  196 |  2 main_T0S0_disp.s     22 | Empty       | ?? |         |   -1 | 00/FFFF               | dispPositionCursor                         
  197 |  2 main_T0S0_disp.s     23 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     pha                    ; push regA to stack
  198 |  2 main_T0S0_disp.s     24 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     tya                    
  199 |  2 main_T0S0_disp.s     25 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     stx    CH              
  200 |  2 main_T0S0_disp.s     26 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     jsr    CURPOS          
  201 |  2 main_T0S0_disp.s     27 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     pla                    ; pull regA from the stack
  202 |  2 main_T0S0_disp.s     28 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     rts                    
  203 |  2 main_T0S0_disp.s     29 | Empty       | ?? |         |   -1 | 00/FFFF               |                                            
  204 |  2 main_T0S0_disp.s     30 | Empty       | ?? |         |   -1 | 00/FFFF               | dispLine                                   
  205 |  2 main_T0S0_disp.s     31 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     lda    #$DF            
  206 |  2 main_T0S0_disp.s     32 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     jsr    COUT            
  207 |  2 main_T0S0_disp.s     33 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     dey                    
  208 |  2 main_T0S0_disp.s     34 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     bne    dispLine        
  209 |  2 main_T0S0_disp.s     35 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     rts                    
  210 |  2 main_T0S0_disp.s     36 | Empty       | ?? |         |   -1 | 00/FFFF               |                                            
  211 |  2 main_T0S0_disp.s     37 | Empty       | ?? |         |   -1 | 00/FFFF               | str2UpperCase                              
  212 |  2 main_T0S0_disp.s     38 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     pha                    
  213 |  2 main_T0S0_disp.s     39 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     sbc    #$E0            
  214 |  2 main_T0S0_disp.s     40 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     bcs    str2UpperCase_1 
  215 |  2 main_T0S0_disp.s     41 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     pla                    
  216 |  2 main_T0S0_disp.s     42 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     rts                    
  217 |  2 main_T0S0_disp.s     43 | Empty       | ?? |         |   -1 | 00/FFFF               | str2UpperCase_1                            
  218 |  2 main_T0S0_disp.s     44 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     pla                    
  219 |  2 main_T0S0_disp.s     45 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     and    #$DF            
  220 |  2 main_T0S0_disp.s     46 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     rts                    
  221 |  2 main_T0S0_disp.s     47 | Empty       | ?? |         |   -1 | 00/FFFF               |                                            
  222 |  2 main_T0S0_disp.s     48 | Empty       | ?? |         |   -1 | 00/FFFF               | printMsg                                   
  223 |  2 main_T0S0_disp.s     49 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     stx    zpPtr1          
  224 |  2 main_T0S0_disp.s     50 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     sty    zpPtr1+1        
  225 |  2 main_T0S0_disp.s     51 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     ldy    #0              
  226 |  2 main_T0S0_disp.s     52 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     lda    (zpPtr1),Y      
  227 |  2 main_T0S0_disp.s     53 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     beq    printMsg_1      
  228 |  2 main_T0S0_disp.s     54 | Empty       | ?? |         |   -1 | 00/FFFF               | printMsg_0                                 
  229 |  2 main_T0S0_disp.s     55 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     jsr    str2UpperCase   
  230 |  2 main_T0S0_disp.s     56 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     jsr    COUT1           ; Char disp routine
  231 |  2 main_T0S0_disp.s     57 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     iny                    ; increase char position
  232 |  2 main_T0S0_disp.s     58 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     lda    (zpPtr1),Y      ; indirect zeropage addressing pointing to current char
  233 |  2 main_T0S0_disp.s     59 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     bne    printMsg_0      ; no need of cmp 00 is current char is not 00 then loo
  234 |  2 main_T0S0_disp.s     60 | Empty       | ?? |         |   -1 | 00/FFFF               | printMsg_1                                 
  235 |  2 main_T0S0_disp.s     61 | Code        | ?? |         |   -1 | 00/FFFF : 00          |                     rts                    
  236 |  1      main_T0S0.s    175 | Equivalence | ?? |         |   -1 | 00/FFFF               | END                 EQU    *               
  237 |  1      main_T0S0.s    176 | Data        | ?? |         |   -1 | 00/FFFF :             |                     ds     $800+256-END,$0 ; padding to make it 256 (1 sector)
  238 |  1      main_T0S0.s    177 | Empty       | ?? |         |   -1 | 00/FFFF               |                                            
  239 |  1      main_T0S0.s    178 | Comment     | ?? |         |   -1 | 00/FFFF               | ; Everything below this line should start at $900
  240 |  1      main_T0S0.s    179 | Empty       | ?? |         |   -1 | 00/FFFF               |                                            
  241 |  1      main_T0S0.s    180 | Empty       | ?? |         |   -1 | 00/FFFF               |                                            
------+----------------------------+-------------+----+---------+------+-----------------------+-------------------------------------------------------------------
