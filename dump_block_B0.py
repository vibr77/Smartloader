#
#__   _____ ___ ___        Author: Vincent BESSON
# \ \ / /_ _| _ ) _ \      Release: 0.1
#  \ V / | || _ \   /      Date: 2024
#   \_/ |___|___/_|_\      Description: Apple Disk II Emulator data script
#                2024      Licence: Creative Commons
#______________________



# python3 tx_dump_checker.py ./dump/dump_tx_trk0_p1.bin ./imageFiles/BII.nic

import pandas as pd
import numpy as np
from bitstring import Bits, BitArray, BitStream, pack, options
import sys


def file2buf(NICname,buf,blockNumber):
    file = open(NICname, "rb")
    
    indx=0
    # Reading the first three bytes from the binary file
    
    file.seek(512*blockNumber)

    data = file.read(512)
    buf=data
    print ("here")
    file.close()
    return data
    

def buf2fil(destFile,buf,blockNumber):
     file = open(destFile, "r+b")
     file.seek(512*blockNumber)
     file.write(buf)
     file.close
     return

buffer=bytearray()
buffer=file2buf(sys.argv[1],buffer,176)



bufz=bytearray([
0x20, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,     
0xB2, 0xCD, 0xC7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0xC4, 0xD3, 0xCB, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0xCE, 0xC9, 0xC3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0xD0, 0xCF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0xD7, 0xCF, 0xDA, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0xF3, 0xED, 0xE1, 0xF2, 0xF4, 0xF0, 0xEF, 0xF2, 0xF4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0xF4, 0xEF, 0xEF, 0xEC, 0xF3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0xC1, 0xC4, 0xD4, 0xD0, 0xD2, 0xCF, 0xAD, 0xB2, 0xAE, 0xB1, 0xAE, 0xB0, 0xAE, 0x00, 0x00, 0x00, 
0xD4, 0xEF, 0xF4, 0xE1, 0xEC, 0xA0, 0xD2, 0xE5, 0xF0, 0xEC, 0xE1, 0xF9, 0xA0, 0x00, 0x00, 0x00, 
0xF3, 0xED, 0xE1, 0xF2, 0xF4, 0xEC, 0xEF, 0xE1, 0xE4, 0xE5, 0xF2, 0xAE, 0xF0, 0xEF, 0x00, 0x00]);

#buf2fil(sys.argv[2],buffer,176)
buf2fil(sys.argv[2],bufz,176)

s=Bits(bufz)  
#s.pp()
